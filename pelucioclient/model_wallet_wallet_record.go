/*
Pelucio backend API

Pelucio backend http endpoints

API version: 1.0
Contact: contato@fourengine.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pelucioclient

import (
	"encoding/json"
)

// checks if the WalletWalletRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletWalletRecord{}

// WalletWalletRecord struct for WalletWalletRecord
type WalletWalletRecord struct {
	CreatedAt *string `json:"createdAt,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *WalletWalletRecordKind `json:"kind,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
	Wallet *WalletWallet `json:"wallet,omitempty"`
	WalletID *string `json:"walletID,omitempty"`
}

// NewWalletWalletRecord instantiates a new WalletWalletRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletWalletRecord() *WalletWalletRecord {
	this := WalletWalletRecord{}
	return &this
}

// NewWalletWalletRecordWithDefaults instantiates a new WalletWalletRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletWalletRecordWithDefaults() *WalletWalletRecord {
	this := WalletWalletRecord{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *WalletWalletRecord) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *WalletWalletRecord) SetCurrency(v string) {
	o.Currency = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WalletWalletRecord) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetKind() WalletWalletRecordKind {
	if o == nil || IsNil(o.Kind) {
		var ret WalletWalletRecordKind
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetKindOk() (*WalletWalletRecordKind, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given WalletWalletRecordKind and assigns it to the Kind field.
func (o *WalletWalletRecord) SetKind(v WalletWalletRecordKind) {
	o.Kind = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetValue() map[string]interface{} {
	if o == nil || IsNil(o.Value) {
		var ret map[string]interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetValueOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return map[string]interface{}{}, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *WalletWalletRecord) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetWallet returns the Wallet field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetWallet() WalletWallet {
	if o == nil || IsNil(o.Wallet) {
		var ret WalletWallet
		return ret
	}
	return *o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetWalletOk() (*WalletWallet, bool) {
	if o == nil || IsNil(o.Wallet) {
		return nil, false
	}
	return o.Wallet, true
}

// HasWallet returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasWallet() bool {
	if o != nil && !IsNil(o.Wallet) {
		return true
	}

	return false
}

// SetWallet gets a reference to the given WalletWallet and assigns it to the Wallet field.
func (o *WalletWalletRecord) SetWallet(v WalletWallet) {
	o.Wallet = &v
}

// GetWalletID returns the WalletID field value if set, zero value otherwise.
func (o *WalletWalletRecord) GetWalletID() string {
	if o == nil || IsNil(o.WalletID) {
		var ret string
		return ret
	}
	return *o.WalletID
}

// GetWalletIDOk returns a tuple with the WalletID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletWalletRecord) GetWalletIDOk() (*string, bool) {
	if o == nil || IsNil(o.WalletID) {
		return nil, false
	}
	return o.WalletID, true
}

// HasWalletID returns a boolean if a field has been set.
func (o *WalletWalletRecord) HasWalletID() bool {
	if o != nil && !IsNil(o.WalletID) {
		return true
	}

	return false
}

// SetWalletID gets a reference to the given string and assigns it to the WalletID field.
func (o *WalletWalletRecord) SetWalletID(v string) {
	o.WalletID = &v
}

func (o WalletWalletRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletWalletRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Wallet) {
		toSerialize["wallet"] = o.Wallet
	}
	if !IsNil(o.WalletID) {
		toSerialize["walletID"] = o.WalletID
	}
	return toSerialize, nil
}

type NullableWalletWalletRecord struct {
	value *WalletWalletRecord
	isSet bool
}

func (v NullableWalletWalletRecord) Get() *WalletWalletRecord {
	return v.value
}

func (v *NullableWalletWalletRecord) Set(val *WalletWalletRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletWalletRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletWalletRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletWalletRecord(val *WalletWalletRecord) *NullableWalletWalletRecord {
	return &NullableWalletWalletRecord{value: val, isSet: true}
}

func (v NullableWalletWalletRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletWalletRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


