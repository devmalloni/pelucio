openapi: 3.0.1
info:
  contact:
    email: contato@fourengine.com.br
    name: 4 Engine Inc
    url: https://fourengine.com/
  description: Pelucio backend http endpoints
  title: Pelucio backend API
  version: "1.0"
servers:
- url: //localhost:8091/api
paths:
  /v1/admin/wallet:
    post:
      description: create a wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.CreateWalletModel'
        description: Create wallet model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet.WalletResponse'
          description: wallet
        "400":
          content: {}
          description: Bad Request
      summary: Create a wallet
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallet/{id}/burn:
    post:
      description: burn funds from one wallet
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.AmountModel'
        description: Amount model
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
        "500":
          content: {}
          description: Internal Server Error
      summary: Burn Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallet/{id}/lock:
    post:
      description: lock funds from one wallet
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.AmountModel'
        description: Amount model
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: Lock Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallet/{id}/mint:
    post:
      description: mint funds from one wallet
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.AmountModel'
        description: Amount model
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: Mint Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallet/{id}/mintandlock:
    post:
      description: unlock funds and burn that same funds from one wallet
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.AmountModel'
        description: Amount model
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: Unlock and burn Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallet/{id}/unlock:
    post:
      description: unlock funds from one wallet
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.AmountModel'
        description: Amount model
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: Unlock Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/admin/wallets:
    get:
      description: Get wallets
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/wallet.WalletResponse'
                type: array
          description: wallet
        "400":
          content: {}
          description: Bad Request
      summary: Get Wallets
      tags:
      - wallet
  /v1/open/wallet/{id}:
    get:
      description: Get wallet infos by ID
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet.WalletResponse'
          description: wallet
        "400":
          content: {}
          description: Bad Request
      summary: Get Wallet
      tags:
      - wallet
  /v1/open/wallet/{id}/records:
    get:
      description: Get wallet records infos by ID
      parameters:
      - description: Wallet id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/wallet.WalletRecord'
                type: array
          description: wallet records
        "400":
          content: {}
          description: Bad Request
      summary: Get Wallet records
      tags:
      - wallet
  /v1/open/wallet/external/{id}:
    get:
      description: Get wallet infos by ExternalID
      parameters:
      - description: External id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wallet.WalletResponse'
          description: wallet
        "400":
          content: {}
          description: Bad Request
      summary: Get Wallet by externalID
      tags:
      - wallet
  /v1/open/wallet/transfer:
    post:
      description: transfer funds from one wallet to another
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.TransferModel'
        description: Transfer data
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: Transfer Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
  /v1/open/wallet/unlockandtransfer:
    post:
      description: unlock funds and transfer from one wallet to another
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet.TransferModel'
        description: Transfer data
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      summary: UnlockAndTransfer Transaction
      tags:
      - wallet
      x-codegen-request-body-name: model
components:
  schemas:
    big.Int:
      type: object
    wallet.AmountModel:
      properties:
        amount:
          type: string
        currency:
          type: string
        transactionExternaID:
          type: string
      type: object
    wallet.CreateWalletModel:
      properties:
        balances:
          items:
            type: string
          type: array
        createdAt:
          type: string
        externalID:
          type: string
        id:
          type: string
        updatedAt:
          type: string
        version:
          type: string
      type: object
    wallet.TransferModel:
      properties:
        amount:
          type: string
        currency:
          type: string
        fromWalletID:
          type: string
        toWalletID:
          type: string
        transactionExternalID:
          type: string
      type: object
    wallet.Wallet:
      example:
        createdAt: createdAt
        balance:
          key: null
        lockedBalance:
          key: null
        external_id: external_id
        id: id
        version: version
        updatedAt: updatedAt
      properties:
        balance:
          additionalProperties:
            $ref: '#/components/schemas/big.Int'
          type: object
        createdAt:
          type: string
        external_id:
          type: string
        id:
          type: string
        lockedBalance:
          additionalProperties:
            $ref: '#/components/schemas/big.Int'
          type: object
        updatedAt:
          type: string
        version:
          type: string
      type: object
    wallet.WalletRecord:
      example:
        createdAt: createdAt
        walletID: walletID
        wallet:
          createdAt: createdAt
          balance:
            key: null
          lockedBalance:
            key: null
          external_id: external_id
          id: id
          version: version
          updatedAt: updatedAt
        kind: 0
        currency: currency
        id: id
        value: "{}"
      properties:
        createdAt:
          type: string
        currency:
          type: string
        id:
          type: string
        kind:
          $ref: '#/components/schemas/wallet.WalletRecordKind'
        value:
          type: object
        wallet:
          $ref: '#/components/schemas/wallet.Wallet'
        walletID:
          type: string
      type: object
    wallet.WalletRecordKind:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      x-enum-varnames:
      - Sum
      - Sub
      - Lock
      - Unlock
    wallet.WalletResponse:
      example:
        createdAt: createdAt
        balance:
          key: balance
        lockedBalance:
          key: lockedBalance
        external_id: external_id
        id: id
        version: version
        updatedAt: updatedAt
      properties:
        balance:
          additionalProperties:
            type: string
          type: object
        createdAt:
          type: string
        external_id:
          type: string
        id:
          type: string
        lockedBalance:
          additionalProperties:
            type: string
          type: object
        updatedAt:
          type: string
        version:
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
x-original-swagger-version: "2.0"
