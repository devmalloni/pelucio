/*
Pelucio backend API

Pelucio backend http endpoints

API version: 1.0
Contact: contato@fourengine.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pelucioclient

import (
	"encoding/json"
)

// checks if the WalletAuAuModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletAuAuModel{}

// WalletAuAuModel struct for WalletAuAuModel
type WalletAuAuModel struct {
	Amount *float32 `json:"amount,omitempty"`
	Currency *string `json:"currency,omitempty"`
	WalletID *string `json:"walletID,omitempty"`
}

// NewWalletAuAuModel instantiates a new WalletAuAuModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletAuAuModel() *WalletAuAuModel {
	this := WalletAuAuModel{}
	return &this
}

// NewWalletAuAuModelWithDefaults instantiates a new WalletAuAuModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletAuAuModelWithDefaults() *WalletAuAuModel {
	this := WalletAuAuModel{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *WalletAuAuModel) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletAuAuModel) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *WalletAuAuModel) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *WalletAuAuModel) SetAmount(v float32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *WalletAuAuModel) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletAuAuModel) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *WalletAuAuModel) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *WalletAuAuModel) SetCurrency(v string) {
	o.Currency = &v
}

// GetWalletID returns the WalletID field value if set, zero value otherwise.
func (o *WalletAuAuModel) GetWalletID() string {
	if o == nil || IsNil(o.WalletID) {
		var ret string
		return ret
	}
	return *o.WalletID
}

// GetWalletIDOk returns a tuple with the WalletID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletAuAuModel) GetWalletIDOk() (*string, bool) {
	if o == nil || IsNil(o.WalletID) {
		return nil, false
	}
	return o.WalletID, true
}

// HasWalletID returns a boolean if a field has been set.
func (o *WalletAuAuModel) HasWalletID() bool {
	if o != nil && !IsNil(o.WalletID) {
		return true
	}

	return false
}

// SetWalletID gets a reference to the given string and assigns it to the WalletID field.
func (o *WalletAuAuModel) SetWalletID(v string) {
	o.WalletID = &v
}

func (o WalletAuAuModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletAuAuModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.WalletID) {
		toSerialize["walletID"] = o.WalletID
	}
	return toSerialize, nil
}

type NullableWalletAuAuModel struct {
	value *WalletAuAuModel
	isSet bool
}

func (v NullableWalletAuAuModel) Get() *WalletAuAuModel {
	return v.value
}

func (v *NullableWalletAuAuModel) Set(val *WalletAuAuModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletAuAuModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletAuAuModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletAuAuModel(val *WalletAuAuModel) *NullableWalletAuAuModel {
	return &NullableWalletAuAuModel{value: val, isSet: true}
}

func (v NullableWalletAuAuModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletAuAuModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


