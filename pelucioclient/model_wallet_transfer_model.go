/*
Pelucio backend API

Pelucio backend http endpoints

API version: 1.0
Contact: contato@fourengine.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pelucioclient

import (
	"encoding/json"
)

// checks if the WalletTransferModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletTransferModel{}

// WalletTransferModel struct for WalletTransferModel
type WalletTransferModel struct {
	Amount *string `json:"amount,omitempty"`
	Currency *string `json:"currency,omitempty"`
	FromWalletID *string `json:"fromWalletID,omitempty"`
	ToWalletID *string `json:"toWalletID,omitempty"`
	TransactionExternalID *string `json:"transactionExternalID,omitempty"`
}

// NewWalletTransferModel instantiates a new WalletTransferModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletTransferModel() *WalletTransferModel {
	this := WalletTransferModel{}
	return &this
}

// NewWalletTransferModelWithDefaults instantiates a new WalletTransferModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletTransferModelWithDefaults() *WalletTransferModel {
	this := WalletTransferModel{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *WalletTransferModel) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferModel) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *WalletTransferModel) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *WalletTransferModel) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *WalletTransferModel) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferModel) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *WalletTransferModel) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *WalletTransferModel) SetCurrency(v string) {
	o.Currency = &v
}

// GetFromWalletID returns the FromWalletID field value if set, zero value otherwise.
func (o *WalletTransferModel) GetFromWalletID() string {
	if o == nil || IsNil(o.FromWalletID) {
		var ret string
		return ret
	}
	return *o.FromWalletID
}

// GetFromWalletIDOk returns a tuple with the FromWalletID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferModel) GetFromWalletIDOk() (*string, bool) {
	if o == nil || IsNil(o.FromWalletID) {
		return nil, false
	}
	return o.FromWalletID, true
}

// HasFromWalletID returns a boolean if a field has been set.
func (o *WalletTransferModel) HasFromWalletID() bool {
	if o != nil && !IsNil(o.FromWalletID) {
		return true
	}

	return false
}

// SetFromWalletID gets a reference to the given string and assigns it to the FromWalletID field.
func (o *WalletTransferModel) SetFromWalletID(v string) {
	o.FromWalletID = &v
}

// GetToWalletID returns the ToWalletID field value if set, zero value otherwise.
func (o *WalletTransferModel) GetToWalletID() string {
	if o == nil || IsNil(o.ToWalletID) {
		var ret string
		return ret
	}
	return *o.ToWalletID
}

// GetToWalletIDOk returns a tuple with the ToWalletID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferModel) GetToWalletIDOk() (*string, bool) {
	if o == nil || IsNil(o.ToWalletID) {
		return nil, false
	}
	return o.ToWalletID, true
}

// HasToWalletID returns a boolean if a field has been set.
func (o *WalletTransferModel) HasToWalletID() bool {
	if o != nil && !IsNil(o.ToWalletID) {
		return true
	}

	return false
}

// SetToWalletID gets a reference to the given string and assigns it to the ToWalletID field.
func (o *WalletTransferModel) SetToWalletID(v string) {
	o.ToWalletID = &v
}

// GetTransactionExternalID returns the TransactionExternalID field value if set, zero value otherwise.
func (o *WalletTransferModel) GetTransactionExternalID() string {
	if o == nil || IsNil(o.TransactionExternalID) {
		var ret string
		return ret
	}
	return *o.TransactionExternalID
}

// GetTransactionExternalIDOk returns a tuple with the TransactionExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferModel) GetTransactionExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionExternalID) {
		return nil, false
	}
	return o.TransactionExternalID, true
}

// HasTransactionExternalID returns a boolean if a field has been set.
func (o *WalletTransferModel) HasTransactionExternalID() bool {
	if o != nil && !IsNil(o.TransactionExternalID) {
		return true
	}

	return false
}

// SetTransactionExternalID gets a reference to the given string and assigns it to the TransactionExternalID field.
func (o *WalletTransferModel) SetTransactionExternalID(v string) {
	o.TransactionExternalID = &v
}

func (o WalletTransferModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletTransferModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.FromWalletID) {
		toSerialize["fromWalletID"] = o.FromWalletID
	}
	if !IsNil(o.ToWalletID) {
		toSerialize["toWalletID"] = o.ToWalletID
	}
	if !IsNil(o.TransactionExternalID) {
		toSerialize["transactionExternalID"] = o.TransactionExternalID
	}
	return toSerialize, nil
}

type NullableWalletTransferModel struct {
	value *WalletTransferModel
	isSet bool
}

func (v NullableWalletTransferModel) Get() *WalletTransferModel {
	return v.value
}

func (v *NullableWalletTransferModel) Set(val *WalletTransferModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletTransferModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletTransferModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletTransferModel(val *WalletTransferModel) *NullableWalletTransferModel {
	return &NullableWalletTransferModel{value: val, isSet: true}
}

func (v NullableWalletTransferModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletTransferModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


