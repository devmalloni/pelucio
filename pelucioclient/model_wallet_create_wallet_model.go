/*
Pelucio backend API

Pelucio backend http endpoints

API version: 1.0
Contact: contato@fourengine.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pelucioclient

import (
	"encoding/json"
)

// checks if the WalletCreateWalletModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletCreateWalletModel{}

// WalletCreateWalletModel struct for WalletCreateWalletModel
type WalletCreateWalletModel struct {
	Balances []string `json:"balances,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	ExternalID *string `json:"externalID,omitempty"`
	Id *string `json:"id,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewWalletCreateWalletModel instantiates a new WalletCreateWalletModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletCreateWalletModel() *WalletCreateWalletModel {
	this := WalletCreateWalletModel{}
	return &this
}

// NewWalletCreateWalletModelWithDefaults instantiates a new WalletCreateWalletModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletCreateWalletModelWithDefaults() *WalletCreateWalletModel {
	this := WalletCreateWalletModel{}
	return &this
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetBalances() []string {
	if o == nil || IsNil(o.Balances) {
		var ret []string
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetBalancesOk() ([]string, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []string and assigns it to the Balances field.
func (o *WalletCreateWalletModel) SetBalances(v []string) {
	o.Balances = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *WalletCreateWalletModel) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *WalletCreateWalletModel) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WalletCreateWalletModel) SetId(v string) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WalletCreateWalletModel) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *WalletCreateWalletModel) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletCreateWalletModel) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *WalletCreateWalletModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *WalletCreateWalletModel) SetVersion(v string) {
	o.Version = &v
}

func (o WalletCreateWalletModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletCreateWalletModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableWalletCreateWalletModel struct {
	value *WalletCreateWalletModel
	isSet bool
}

func (v NullableWalletCreateWalletModel) Get() *WalletCreateWalletModel {
	return v.value
}

func (v *NullableWalletCreateWalletModel) Set(val *WalletCreateWalletModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletCreateWalletModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletCreateWalletModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletCreateWalletModel(val *WalletCreateWalletModel) *NullableWalletCreateWalletModel {
	return &NullableWalletCreateWalletModel{value: val, isSet: true}
}

func (v NullableWalletCreateWalletModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletCreateWalletModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


